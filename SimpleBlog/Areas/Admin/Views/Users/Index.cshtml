@model SimpleBlog.Areas.Admin.ViewModels.UsersIndex  
<!-- the above binds to the User view model defined in ViewModels directory.
    This allows access to the User entity - thus gaining access to User table 
    from database-->
<h1>Users</h1>

<div class="btn-toolbar">
<!--url action specifies the method in userscontroller to run when button is clicked-->
    <!--in this case, run the New() action -->
        <a href="@Url.Action("new")" class="btn btn-primary btn-sm"><i class="glyphicon glyphicon-plus"></i> Create User</a>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Username</th>
            <th>Email</th>
            <th>Roles</th>
            <th>Actions</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.Username</td>
                <td>@user.Email</td>
                <td>@string.Join(", ", user.Roles.Select(role => role.Name))</td>
                <td>
                    <div class="btn-group">
                        <a href="@Url.Action("edit", new{user.Id})" class="btn btn-xs btn-primary">
                            <i class="glyphicon glyphicon-edit"></i>
                            Edit
                        </a>
                        <a href="@Url.Action("resetpassword", new{user.Id})" class="btn btn-xs btn-default">
                            <i class="glyphicon glyphicon-lock"></i>
                            Reset Password
                        </a>
                        <a href="@Url.Action("delete", new{user.Id})" class="btn btn-xs btn-danger" data-post="Are your sure want to delete @user.Username?">
                            <i class="glyphicon glyphicon-remove"></i>
                            Delete
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>

</table>